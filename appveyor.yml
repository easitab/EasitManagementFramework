version: 15.0.{build}
pull_requests:
  do_not_increment_build_number: true
branches:
  only:
  - /development/
skip_non_tags: true
build_script:
- ps: "New-Module -Name \"$env:moduleName\" -ScriptBlock {\n    $modulePath = \"$env:sourceRoot\\$env:moduleName.psm1\"\n    $privScripts = Get-ChildItem -Path \"$env:sourceRoot\\private\" -Filter \"*.ps1\" -Recurse\n    $pubScripts = Get-ChildItem -Path \"$env:sourceRoot\\public\" -Filter \"*.ps1\" -Recurse\n    if (!(Test-Path -Path $modulePath)) {\n        New-Item -Path \"$env:sourceRoot\" -Name \"$env:moduleName.psm1\" -ItemType \"file\"\n    }\n    foreach ($privateScript in $privScripts) {\n        $scriptContent = Get-Content -Path \"$($privateScript.FullName)\" -Raw\n        if (Test-Path -Path $modulePath) {\n            Add-Content -Path $modulePath -Value $scriptContent\n        } else {\n            Write-Output \"Unable to find modulePath at $modulePath\" -ForegroundColor Red\n        }\n    }\n    foreach ($publicScript in $pubScripts) {\n        $scriptContent = Get-Content -Path \"$($publicScript.FullName)\" -Raw\n        if (Test-Path -Path $modulePath) {   \n            Add-Content -Path $modulePath -Value $scriptContent                     \n            Add-Content -Path $modulePath -Value \"Export-ModuleMember -Function $($publicScript.BaseName)\"\n        } else {\n            Write-Output \"Unable to find modulePath at $modulePath\" -ForegroundColor Red\n        }\n    }\n}\nGet-ChildItem -Path \"$env:sourceRoot\"\n$manifest = @{\n    Path              = \"$env:sourceRoot\\$env:moduleName.psd1\" \n    RootModule        = \"$env:moduleName.psm1\" \n    CompanyName       = \"$env:companyName\"\n    Author            = \"$env:moduleAuthor\"\n    ModuleVersion     = \"$env:APPVEYOR_BUILD_VERSION\"\n    HelpInfoUri       = \"$env:helpInfoUri\"\n    LicenseUri        = \"$env:licenseUri\"\n    ProjectUri        = \"$env:projectUri\"\n    Description       = 'Management Framework for Easit BPS and Easit GO'\n    PowerShellVersion = '5.1'\n    Copyright         = \"(c) 2020 $env:companyName. All rights reserved.\"\n}\nNew-ModuleManifest @manifest"
test_script:
- ps: >-
    Install-Module Pester -Force

    Invoke-Pester -EnableExit
on_success:
- ps: $newManifestTest = Test-ModuleManifest -Path "$env:sourceRoot\$env:moduleName.psd1"
on_finish:
- ps: >-
    if ($newManifestTest) {
            #Publish-Module -Path "$env:sourceRoot" -NuGetApiKey "$env:galleryPublishingKey"
        }